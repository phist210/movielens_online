# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-21 22:03
from __future__ import unicode_literals
from django.db import migrations
import csv
import names


class Migration(migrations.Migration):
    def load_movies(apps, schema_editor):
        Movie = apps.get_model('recommender', 'Movie')
        categories = {'fieldnames': ('movie_id', 'title', 'release_date', 'video_release', 'imdb')}
        with open('u.item', 'r', encoding='latin-1') as f:
            reader = csv.DictReader(f, delimiter="|", **categories)
            for row in reader:
                m = Movie(id=row['movie_id'], title=row['title'], imdb=row['imdb'], release_date=row['release_date'], video_release=row['video_release'])
                m.save()

    def load_rater(apps, schema_editor):
        Rater = apps.get_model('recommender', 'Rater')
        name_bank = []
        categories = {'fieldnames': ('rater_id', 'age', 'gender', 'occupation', 'zipcode')}
        with open('u.user', 'r') as f:
            reader = csv.DictReader(f, delimiter="|", **categories)
            for row in reader:
                while True:
                    if row['gender'] == 'M':
                        name = names.get_full_name(gender="male")
                    else:
                        name = names.get_full_name(gender="female")
                    if name not in name_bank:
                        name_bank.append(name)
                        break

                r = Rater(id=row['rater_id'], name=name, age=row['age'], gender=row['gender'], zipcode=row['zipcode'])
                r.save()

    def load_rating(apps, schema_editor):
        Movie = apps.get_model('recommender', 'Movie')
        Rater = apps.get_model('recommender', 'Rater')
        Rating = apps.get_model('recommender', 'Rating')

        categories = {'fieldnames': ('user_id', 'movie_id', 'rating', 'timstamp')}
        with open('u.data', 'r') as f:
            reader = csv.DictReader(f, delimiter="\t", **categories)
            for row in reader:
                r = Rater.objects.get(pk=row['user_id'])
                m = Movie.objects.get(pk=row['movie_id'])
                rate = Rating(rater=r, movie=m, rating=row['rating'], timstamp=row['timstamp'])
                rate.save()

    dependencies = [
        ('recommender', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(load_movies),
        migrations.RunPython(load_rater),
        migrations.RunPython(load_rating)
    ]
